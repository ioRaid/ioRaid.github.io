<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1739" height="785" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 1739 785"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M531.5,60.5v30h-477V110.5"></path><path id="kity_path_33" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M40.5,136.5V182.5L60.5,182.5"></path><path id="kity_path_35" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M531.5,60.5v30h139V110.5"></path><path id="kity_path_37" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M612.5,136.5V182.5L632.5,182.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M531.5,60.5v30h464V110.5"></path><path id="kity_path_41" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M967.5,136.5V182.5L987.5,182.5"></path><path id="kity_path_43" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M967.5,136.5V234.5L987.5,234.5"></path><path id="kity_path_45" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M967.5,136.5V286.5L987.5,286.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1007.5,297.5V338.5L1027.5,338.5"></path><path id="kity_path_49" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1047.5,349.5V390.5L1067.5,390.5"></path><path id="kity_path_51" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1047.5,349.5V442.5L1067.5,442.5"></path><path id="kity_path_53" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1047.5,349.5V494.5L1067.5,494.5"></path><path id="kity_path_55" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1007.5,297.5V546.5L1027.5,546.5"></path><path id="kity_path_57" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1047.5,557.5V598.5L1067.5,598.5"></path><path id="kity_path_59" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1047.5,557.5V650.5L1067.5,650.5"></path><path id="kity_path_61" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1047.5,557.5V702.5L1067.5,702.5"></path><path id="kity_path_63" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M967.5,136.5V754.5L987.5,754.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(57, 80, 96)" d="M464.5,20.5h134a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-134a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="32.5" x="483.5">消息传递机制</text></g></g><g id="kity_g_12"><path id="kity_path_13" fill="none" stroke="none" d="M483.5,40.5h0v0h0z"></path></g><g id="kity_g_14"><path id="kity_path_15" fill="none" stroke="none" d="M483.5,40.5h0v0h0z"></path><path id="kity_path_16" fill="none" stroke="none"></path></g><g id="minder_node2"><g id="node_expander2" style="cursor: pointer;"><path id="kity_path_119" fill="white" stroke="gray" d="M60.5,103.5A6,6,0,1,1,48.5,103.5A6,6,0,1,1,60.5,103.5"></path><path id="kity_path_120" fill="none" stroke="gray" d="M50,103.5L59,103.5"></path></g><path id="node_outline3" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M23.5,110.5h62a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-62a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text3" fill="black"><text id="kity_text_67" text-rendering="inherit" font-size="14" dy=".8em" y="116.5" x="40.5">原理</text></g></g><g id="minder_node3"><g id="node_expander1" display="none" style="cursor: pointer;"><path id="kity_path_116" fill="white" stroke="gray" d="M60.5,182.5A6,6,0,1,1,48.5,182.5A6,6,0,1,1,60.5,182.5"></path><path id="kity_path_117" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="none" stroke="none" d="M65.5,171.5h482a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-482a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text2" fill="black"><text id="kity_text_65" text-rendering="inherit" font-size="12" dy=".8em" y="176.5" x="70.5">在编译时，程序的源代码就会从对象发送消息转换成Runtime的objc_msgSend函数调用.</text></g></g><g id="minder_node4"><g id="node_expander4" style="cursor: pointer;"><path id="kity_path_125" fill="white" stroke="gray" d="M676.5,103.5A6,6,0,1,1,664.5,103.5A6,6,0,1,1,676.5,103.5"></path><path id="kity_path_126" fill="none" stroke="gray" d="M666,103.5L675,103.5"></path></g><path id="node_outline5" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M595.5,110.5h150a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-150a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text5" fill="black"><text id="kity_text_71" text-rendering="inherit" font-size="14" dy=".8em" y="116.5" x="612.5">&#xa0;为什么叫消息发送</text></g></g><g id="minder_node5"><g id="node_expander3" display="none" style="cursor: pointer;"><path id="kity_path_122" fill="white" stroke="gray" d="M632.5,182.5A6,6,0,1,1,620.5,182.5A6,6,0,1,1,632.5,182.5"></path><path id="kity_path_123" fill="none" stroke="gray"></path></g><path id="node_outline4" fill="none" stroke="none" d="M637.5,171.5h265a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-265a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text4" fill="black"><text id="kity_text_69" text-rendering="inherit" font-size="12" dy=".8em" y="176.5" x="642.5">&#xa0;在面向对象编程中，对象调用方法叫做发送消息</text></g></g><g id="minder_node6"><g id="node_expander17" style="cursor: pointer;"><path id="kity_path_164" fill="white" stroke="gray" d="M1001.5,103.5A6,6,0,1,1,989.5,103.5A6,6,0,1,1,1001.5,103.5"></path><path id="kity_path_165" fill="none" stroke="gray" d="M991,103.5L1000,103.5"></path></g><path id="node_outline18" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M950.5,110.5h90a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-90a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text18" fill="black"><text id="kity_text_97" text-rendering="inherit" font-size="14" dy=".8em" y="116.5" x="967.5">调用过程</text></g></g><g id="minder_node7"><g id="node_expander5" display="none" style="cursor: pointer;"><path id="kity_path_128" fill="white" stroke="gray" d="M987.5,182.5A6,6,0,1,1,975.5,182.5A6,6,0,1,1,987.5,182.5"></path><path id="kity_path_129" fill="none" stroke="gray"></path></g><path id="node_outline6" fill="none" stroke="none" d="M992.5,171.5h188a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-188a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text6" fill="black"><text id="kity_text_73" text-rendering="inherit" font-size="12" dy=".8em" y="176.5" x="997.5">检测这个selector是不是要忽略的</text></g></g><g id="minder_node8"><g id="node_expander6" display="none" style="cursor: pointer;"><path id="kity_path_131" fill="white" stroke="gray" d="M987.5,234.5A6,6,0,1,1,975.5,234.5A6,6,0,1,1,987.5,234.5"></path><path id="kity_path_132" fill="none" stroke="gray"></path></g><path id="node_outline7" fill="none" stroke="none" d="M992.5,223.5h177a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-177a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text7" fill="black"><text id="kity_text_75" text-rendering="inherit" font-size="12" dy=".8em" y="228.5" x="997.5">检测这个targer是不是nil对象。</text></g></g><g id="minder_node9"><g id="node_expander15" style="cursor: pointer;"><path id="kity_path_158" fill="white" stroke="gray" d="M987.5,286.5A6,6,0,1,1,975.5,286.5A6,6,0,1,1,987.5,286.5"></path><path id="kity_path_159" fill="none" stroke="gray" d="M977,286.5L986,286.5"></path></g><path id="node_outline16" fill="none" stroke="none" d="M992.5,275.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text16" fill="black"><text id="kity_text_93" text-rendering="inherit" font-size="12" dy=".8em" y="280.5" x="997.5">调用方法</text></g></g><g id="minder_node10"><g id="node_expander10" style="cursor: pointer;"><path id="kity_path_143" fill="white" stroke="gray" d="M1027.5,338.5A6,6,0,1,1,1015.5,338.5A6,6,0,1,1,1027.5,338.5"></path><path id="kity_path_144" fill="none" stroke="gray" d="M1017,338.5L1026,338.5"></path></g><path id="node_outline11" fill="none" stroke="none" d="M1032.5,327.5h85a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-85a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text11" fill="black"><text id="kity_text_83" text-rendering="inherit" font-size="12" dy=".8em" y="332.5" x="1037.5">&#xa0;调用实例方法</text></g></g><g id="minder_node11"><g id="node_expander7" display="none" style="cursor: pointer;"><path id="kity_path_134" fill="white" stroke="gray" d="M1067.5,390.5A6,6,0,1,1,1055.5,390.5A6,6,0,1,1,1067.5,390.5"></path><path id="kity_path_135" fill="none" stroke="gray"></path></g><path id="node_outline8" fill="none" stroke="none" d="M1072.5,379.5h530a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-530a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text8" fill="black"><text id="kity_text_77" text-rendering="inherit" font-size="12" dy=".8em" y="384.5" x="1077.5">通过实例对象的引用id，找到isa指针。isa指针指向类classs ，class中methodLists中查找该方法。</text></g></g><g id="minder_node12"><g id="node_expander8" display="none" style="cursor: pointer;"><path id="kity_path_137" fill="white" stroke="gray" d="M1067.5,442.5A6,6,0,1,1,1055.5,442.5A6,6,0,1,1,1067.5,442.5"></path><path id="kity_path_138" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="none" stroke="none" d="M1072.5,431.5h567a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-567a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text9" fill="black"><text id="kity_text_79" text-rendering="inherit" font-size="12" dy=".8em" y="436.5" x="1077.5">如果找不到，通过class的super_class指针，找父类的类对象结构体，从父类的methodLists中查找该方法</text></g></g><g id="minder_node13"><g id="node_expander9" display="none" style="cursor: pointer;"><path id="kity_path_140" fill="white" stroke="gray" d="M1067.5,494.5A6,6,0,1,1,1055.5,494.5A6,6,0,1,1,1067.5,494.5"></path><path id="kity_path_141" fill="none" stroke="gray"></path></g><path id="node_outline10" fill="none" stroke="none" d="M1072.5,483.5h454a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-454a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text10" fill="black"><text id="kity_text_81" text-rendering="inherit" font-size="12" dy=".8em" y="488.5" x="1077.5">如果找不到，则在父类中通过super_class向上一级父类结构体中查找，直至根class;</text></g></g><g id="minder_node14"><g id="node_expander14" style="cursor: pointer;"><path id="kity_path_155" fill="white" stroke="gray" d="M1027.5,546.5A6,6,0,1,1,1015.5,546.5A6,6,0,1,1,1027.5,546.5"></path><path id="kity_path_156" fill="none" stroke="gray" d="M1017,546.5L1026,546.5"></path></g><path id="node_outline15" fill="none" stroke="none" d="M1032.5,535.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text15" fill="black"><text id="kity_text_91" text-rendering="inherit" font-size="12" dy=".8em" y="540.5" x="1037.5">调用类方法</text></g></g><g id="minder_node15"><g id="node_expander11" display="none" style="cursor: pointer;"><path id="kity_path_146" fill="white" stroke="gray" d="M1067.5,598.5A6,6,0,1,1,1055.5,598.5A6,6,0,1,1,1067.5,598.5"></path><path id="kity_path_147" fill="none" stroke="gray"></path></g><path id="node_outline12" fill="none" stroke="none" d="M1072.5,587.5h380a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-380a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text12" fill="black"><text id="kity_text_85" text-rendering="inherit" font-size="12" dy=".8em" y="592.5" x="1077.5">通过isa指针找到metaclass，并从其中methodLists中查找该类方法。</text></g></g><g id="minder_node16"><g id="node_expander12" display="none" style="cursor: pointer;"><path id="kity_path_149" fill="white" stroke="gray" d="M1067.5,650.5A6,6,0,1,1,1055.5,650.5A6,6,0,1,1,1067.5,650.5"></path><path id="kity_path_150" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M1072.5,639.5h642a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-642a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text13" fill="black"><text id="kity_text_87" text-rendering="inherit" font-size="12" dy=".8em" y="644.5" x="1077.5">如果找不到，通过metaclass的super_class指针找到父类的metaclass对象结构体，然后从methodlists中查找该类方法</text></g></g><g id="minder_node17"><g id="node_expander13" display="none" style="cursor: pointer;"><path id="kity_path_152" fill="white" stroke="gray" d="M1067.5,702.5A6,6,0,1,1,1055.5,702.5A6,6,0,1,1,1067.5,702.5"></path><path id="kity_path_153" fill="none" stroke="gray"></path></g><path id="node_outline14" fill="none" stroke="none" d="M1072.5,691.5h461a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-461a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text14" fill="black"><text id="kity_text_89" text-rendering="inherit" font-size="12" dy=".8em" y="696.5" x="1077.5">如果找不到，刚继续通过super_cllass向上一级父类结构体中查找，直至根metaclass</text></g></g><g id="minder_node18"><g id="node_expander16" display="none" style="cursor: pointer;"><path id="kity_path_161" fill="white" stroke="gray" d="M987.5,754.5A6,6,0,1,1,975.5,754.5A6,6,0,1,1,987.5,754.5"></path><path id="kity_path_162" fill="none" stroke="gray"></path></g><path id="node_outline17" fill="none" stroke="none" d="M992.5,743.5h202a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-202a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text17" fill="black"><text id="kity_text_95" text-rendering="inherit" font-size="12" dy=".8em" y="748.5" x="997.5">如果找不到方法，进入动态方法解析</text></g></g></g></g></svg>