<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2107" height="2262" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 2107 2262"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M65,891.5A162.5,858,0,0,1,227.5,33.5"></path><path id="kity_path_33" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M347.5,33.5C367.5,33.5,367.5,33.5,387.5,33.5"></path><path id="kity_path_35" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M634.5,33.5C654.5,33.5,654.5,33.5,674.5,33.5"></path><path id="kity_path_37" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M754.5,33.5C774.5,33.5,774.5,33.5,794.5,33.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M65,891.5A162.5,664,0,0,1,227.5,227.5"></path><path id="kity_path_41" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M325.5,227.5C345.5,227.5,345.5,97.5,365.5,97.5"></path><path id="kity_path_43" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M325.5,227.5C345.5,227.5,345.5,149.5,365.5,149.5"></path><path id="kity_path_45" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M325.5,227.5C345.5,227.5,345.5,201.5,365.5,201.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M325.5,227.5C345.5,227.5,345.5,253.5,365.5,253.5"></path><path id="kity_path_49" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M325.5,227.5C345.5,227.5,345.5,305.5,365.5,305.5"></path><path id="kity_path_51" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M325.5,227.5C345.5,227.5,345.5,357.5,365.5,357.5"></path><path id="kity_path_53" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M65,891.5A1.5,558,0,0,1,63.5,1449.5"></path><path id="kity_path_55" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M189.5,1449.5C209.5,1449.5,209.5,1092.5,229.5,1092.5"></path><path id="kity_path_57" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M303.5,1092.5C323.5,1092.5,323.5,975.5,343.5,975.5"></path><path id="kity_path_59" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M303.5,1092.5C323.5,1092.5,323.5,1027.5,343.5,1027.5"></path><path id="kity_path_61" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M303.5,1092.5C323.5,1092.5,323.5,1079.5,343.5,1079.5"></path><path id="kity_path_63" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M303.5,1092.5C323.5,1092.5,323.5,1209.5,343.5,1209.5"></path><path id="kity_path_65" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M775.5,1209.5C795.5,1209.5,795.5,1209.5,815.5,1209.5"></path><path id="kity_path_67" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M883.5,1209.5C903.5,1209.5,903.5,1131.5,923.5,1131.5"></path><path id="kity_path_69" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M883.5,1209.5C903.5,1209.5,903.5,1183.5,923.5,1183.5"></path><path id="kity_path_71" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M883.5,1209.5C903.5,1209.5,903.5,1235.5,923.5,1235.5"></path><path id="kity_path_73" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M883.5,1209.5C903.5,1209.5,903.5,1287.5,923.5,1287.5"></path><path id="kity_path_75" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M189.5,1449.5C209.5,1449.5,209.5,1430.5,229.5,1430.5"></path><path id="kity_path_77" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M353.5,1430.5C373.5,1430.5,373.5,1365.5,393.5,1365.5"></path><path id="kity_path_79" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M577.5,1365.5C597.5,1365.5,597.5,1339.5,617.5,1339.5"></path><path id="kity_path_81" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M577.5,1365.5C597.5,1365.5,597.5,1391.5,617.5,1391.5"></path><path id="kity_path_83" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M353.5,1430.5C373.5,1430.5,373.5,1495.5,393.5,1495.5"></path><path id="kity_path_85" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M577.5,1495.5C597.5,1495.5,597.5,1495.5,617.5,1495.5"></path><path id="kity_path_87" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M943.5,1495.5C963.5,1495.5,963.5,1495.5,983.5,1495.5"></path><path id="kity_path_89" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1063.5,1495.5C1083.5,1495.5,1083.5,1443.5,1103.5,1443.5"></path><path id="kity_path_91" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1063.5,1495.5C1083.5,1495.5,1083.5,1495.5,1103.5,1495.5"></path><path id="kity_path_93" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1063.5,1495.5C1083.5,1495.5,1083.5,1547.5,1103.5,1547.5"></path><path id="kity_path_95" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M189.5,1449.5C209.5,1449.5,209.5,1677.5,229.5,1677.5"></path><path id="kity_path_97" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M275.5,1677.5C295.5,1677.5,295.5,1677.5,315.5,1677.5"></path><path id="kity_path_99" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M519.5,1677.5C539.5,1677.5,539.5,1677.5,559.5,1677.5"></path><path id="kity_path_101" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M663.5,1677.5C683.5,1677.5,683.5,1625.5,703.5,1625.5"></path><path id="kity_path_103" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M771.5,1625.5C791.5,1625.5,791.5,1625.5,811.5,1625.5"></path><path id="kity_path_105" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M899.5,1625.5C919.5,1625.5,919.5,1625.5,939.5,1625.5"></path><path id="kity_path_107" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M983.5,1625.5C1003.5,1625.5,1003.5,1625.5,1023.5,1625.5"></path><path id="kity_path_109" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1286.5,1625.5C1306.5,1625.5,1306.5,1625.5,1326.5,1625.5"></path><path id="kity_path_111" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1574.5,1625.5C1594.5,1625.5,1594.5,1625.5,1614.5,1625.5"></path><path id="kity_path_113" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1718.5,1625.5C1738.5,1625.5,1738.5,1599.5,1758.5,1599.5"></path><path id="kity_path_115" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1718.5,1625.5C1738.5,1625.5,1738.5,1651.5,1758.5,1651.5"></path><path id="kity_path_117" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M663.5,1677.5C683.5,1677.5,683.5,1729.5,703.5,1729.5"></path><path id="kity_path_119" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M783.5,1729.5C803.5,1729.5,803.5,1703.5,823.5,1703.5"></path><path id="kity_path_121" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1037.5,1703.5C1057.5,1703.5,1057.5,1703.5,1077.5,1703.5"></path><path id="kity_path_123" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M783.5,1729.5C803.5,1729.5,803.5,1755.5,823.5,1755.5"></path><path id="kity_path_125" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M189.5,1449.5C209.5,1449.5,209.5,1807.5,229.5,1807.5"></path><path id="kity_path_127" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M277.5,1807.5C297.5,1807.5,297.5,1807.5,317.5,1807.5"></path><path id="kity_path_129" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M65,891.5A178.5,288,0,0,1,243.5,603.5"></path><path id="kity_path_131" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M313.5,603.5C328.5,603.5,328.5,604.5,343.5,604.5"></path><path id="kity_path_133" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M698.5,604.5C718.5,604.5,718.5,474.5,738.5,474.5"></path><path id="kity_path_135" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M698.5,604.5C718.5,604.5,718.5,526.5,738.5,526.5"></path><path id="kity_path_137" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M698.5,604.5C718.5,604.5,718.5,578.5,738.5,578.5"></path><path id="kity_path_139" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M698.5,604.5C718.5,604.5,718.5,630.5,738.5,630.5"></path><path id="kity_path_141" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M698.5,604.5C718.5,604.5,718.5,682.5,738.5,682.5"></path><path id="kity_path_143" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M698.5,604.5C718.5,604.5,718.5,734.5,738.5,734.5"></path><path id="kity_path_145" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M65,891.5A137.5,1226,0,0,0,202.5,2117.5"></path><path id="kity_path_147" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M394.5,2117.5C414.5,2117.5,414.5,2003.5,434.5,2003.5"></path><path id="kity_path_149" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M394.5,2117.5C414.5,2117.5,414.5,2055.5,434.5,2055.5"></path><path id="kity_path_151" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M394.5,2117.5C414.5,2117.5,414.5,2125.5,434.5,2125.5"></path><path id="kity_path_153" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M394.5,2117.5C414.5,2117.5,414.5,2213.5,434.5,2213.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(57, 80, 96)" d="M25.5,871.5h79a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-79a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="883.5" x="44.5">Block</text></g></g><g id="kity_g_12"><path id="kity_path_13" fill="none" stroke="none" d="M44.5,891.5h0v0h0z"></path></g><g id="kity_g_14"><path id="kity_path_15" fill="none" stroke="none" d="M44.5,891.5h0v0h0z"></path><path id="kity_path_16" fill="none" stroke="none"></path></g><g id="minder_node2"><g id="node_expander4" style="cursor: pointer;"><path id="kity_path_355" fill="white" stroke="gray" d="M228.5,33.5A6,6,0,1,1,216.5,33.5A6,6,0,1,1,228.5,33.5"></path><path id="kity_path_356" fill="none" stroke="gray" d="M218,33.5L227,33.5"></path></g><path id="node_outline5" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M232.5,20.5h112a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-112a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text5" fill="black"><text id="kity_text_161" text-rendering="inherit" font-size="14" dy=".8em" y="26.5" x="249.5">什么是Block</text></g></g><g id="minder_node3"><g id="node_expander3" style="cursor: pointer;"><path id="kity_path_352" fill="white" stroke="gray" d="M387.5,33.5A6,6,0,1,1,375.5,33.5A6,6,0,1,1,387.5,33.5"></path><path id="kity_path_353" fill="none" stroke="gray" d="M377,33.5L386,33.5"></path></g><path id="node_outline4" fill="none" stroke="none" d="M392.5,22.5h237a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-237a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text4" fill="black"><text id="kity_text_159" text-rendering="inherit" font-size="12" dy=".8em" y="27.5" x="397.5">实际就是Objective-C语言对于闭包的实现</text></g></g><g id="minder_node4"><g id="node_expander2" style="cursor: pointer;"><path id="kity_path_349" fill="white" stroke="gray" d="M674.5,33.5A6,6,0,1,1,662.5,33.5A6,6,0,1,1,674.5,33.5"></path><path id="kity_path_350" fill="none" stroke="gray" d="M664,33.5L673,33.5"></path></g><path id="node_outline3" fill="none" stroke="none" d="M679.5,22.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text3" fill="black"><text id="kity_text_157" text-rendering="inherit" font-size="12" dy=".8em" y="27.5" x="684.5">什么是闭包</text></g></g><g id="minder_node5"><g id="node_expander1" display="none" style="cursor: pointer;"><path id="kity_path_346" fill="white" stroke="gray" d="M794.5,33.5A6,6,0,1,1,782.5,33.5A6,6,0,1,1,794.5,33.5"></path><path id="kity_path_347" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="none" stroke="none" d="M799.5,22.5h586a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-586a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text2" fill="black"><text id="kity_text_155" text-rendering="inherit" font-size="12" dy=".8em" y="27.5" x="804.5">闭包就是一个函数（或指向函数的指针），再加上该函数执行的外部的上下文变量（有时候也称作自由变量）</text></g></g><g id="minder_node6"><g id="node_expander11" style="cursor: pointer;"><path id="kity_path_376" fill="white" stroke="gray" d="M228.5,227.5A6,6,0,1,1,216.5,227.5A6,6,0,1,1,228.5,227.5"></path><path id="kity_path_377" fill="none" stroke="gray" d="M218,227.5L227,227.5"></path></g><path id="node_outline12" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M232.5,214.5h90a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-90a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text12" fill="black"><text id="kity_text_175" text-rendering="inherit" font-size="14" dy=".8em" y="220.5" x="249.5">数据结构</text></g></g><g id="minder_node7"><g id="node_expander5" display="none" style="cursor: pointer;"><path id="kity_path_358" fill="white" stroke="gray" d="M365.5,97.5A6,6,0,1,1,353.5,97.5A6,6,0,1,1,365.5,97.5"></path><path id="kity_path_359" fill="none" stroke="gray"></path></g><path id="node_outline6" fill="none" stroke="none" d="M370.5,86.5h325a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-325a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text6" fill="black"><text id="kity_text_163" text-rendering="inherit" font-size="12" dy=".8em" y="91.5" x="375.5">isa指针（所有对象都有该指针，用于实现对象想关的功能）</text></g></g><g id="minder_node8"><g id="node_expander6" display="none" style="cursor: pointer;"><path id="kity_path_361" fill="white" stroke="gray" d="M365.5,149.5A6,6,0,1,1,353.5,149.5A6,6,0,1,1,365.5,149.5"></path><path id="kity_path_362" fill="none" stroke="gray"></path></g><path id="node_outline7" fill="none" stroke="none" d="M370.5,138.5h264a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-264a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text7" fill="black"><text id="kity_text_165" text-rendering="inherit" font-size="12" dy=".8em" y="143.5" x="375.5">flags（用于按bit位表示一些block的附加信息）</text></g></g><g id="minder_node9"><g id="node_expander7" display="none" style="cursor: pointer;"><path id="kity_path_364" fill="white" stroke="gray" d="M365.5,201.5A6,6,0,1,1,353.5,201.5A6,6,0,1,1,365.5,201.5"></path><path id="kity_path_365" fill="none" stroke="gray"></path></g><path id="node_outline8" fill="none" stroke="none" d="M370.5,190.5h132a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-132a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text8" fill="black"><text id="kity_text_167" text-rendering="inherit" font-size="12" dy=".8em" y="195.5" x="375.5">reserved（保留变量）</text></g></g><g id="minder_node10"><g id="node_expander8" display="none" style="cursor: pointer;"><path id="kity_path_367" fill="white" stroke="gray" d="M365.5,253.5A6,6,0,1,1,353.5,253.5A6,6,0,1,1,365.5,253.5"></path><path id="kity_path_368" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="none" stroke="none" d="M370.5,242.5h332a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-332a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text9" fill="black"><text id="kity_text_169" text-rendering="inherit" font-size="12" dy=".8em" y="247.5" x="375.5">invoke（函数指针，指向具体的block实现的函数调用地址）</text></g></g><g id="minder_node11"><g id="node_expander9" display="none" style="cursor: pointer;"><path id="kity_path_370" fill="white" stroke="gray" d="M365.5,305.5A6,6,0,1,1,353.5,305.5A6,6,0,1,1,365.5,305.5"></path><path id="kity_path_371" fill="none" stroke="gray"></path></g><path id="node_outline10" fill="none" stroke="none" d="M370.5,294.5h533a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-533a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text10" fill="black"><text id="kity_text_171" text-rendering="inherit" font-size="12" dy=".8em" y="299.5" x="375.5">descriptor（表示该block的附加描述信息，主要是size大小 ，以及copy和dispose函数的指针。）</text></g></g><g id="minder_node12"><g id="node_expander10" display="none" style="cursor: pointer;"><path id="kity_path_373" fill="white" stroke="gray" d="M365.5,357.5A6,6,0,1,1,353.5,357.5A6,6,0,1,1,365.5,357.5"></path><path id="kity_path_374" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="none" stroke="none" d="M370.5,346.5h681a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-681a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text11" fill="black"><text id="kity_text_173" text-rendering="inherit" font-size="12" dy=".8em" y="351.5" x="375.5">variables（capture过来的变量，block能够访问它外部的局部变量，就是因为将这此变量（或变量地址）复制到了结构体中）</text></g></g><g id="minder_node13"><g id="node_expander49" style="cursor: pointer;"><path id="kity_path_490" fill="white" stroke="gray" d="M64.5,1449.5A6,6,0,1,1,52.5,1449.5A6,6,0,1,1,64.5,1449.5"></path><path id="kity_path_491" fill="none" stroke="gray" d="M54,1449.5L63,1449.5"></path></g><path id="node_outline50" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M68.5,1436.5h118a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-118a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text50" fill="black"><text id="kity_text_252" text-rendering="inherit" font-size="14" dy=".8em" y="1442.5" x="85.5">内存管理方式</text></g></g><g id="minder_node14"><g id="node_expander21" style="cursor: pointer;"><path id="kity_path_406" fill="white" stroke="gray" d="M229.5,1092.5A6,6,0,1,1,217.5,1092.5A6,6,0,1,1,229.5,1092.5"></path><path id="kity_path_407" fill="none" stroke="gray" d="M219,1092.5L228,1092.5"></path></g><path id="node_outline22" fill="none" stroke="none" d="M234.5,1081.5h64a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-64a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text22" fill="black"><text id="kity_text_195" text-rendering="inherit" font-size="12" dy=".8em" y="1086.5" x="239.5">copy原理</text></g></g><g id="minder_node15"><g id="node_expander12" display="none" style="cursor: pointer;"><path id="kity_path_379" fill="white" stroke="gray" d="M343.5,975.5A6,6,0,1,1,331.5,975.5A6,6,0,1,1,343.5,975.5"></path><path id="kity_path_380" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M348.5,964.5h180a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-180a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text13" fill="black"><text id="kity_text_177" text-rendering="inherit" font-size="12" dy=".8em" y="969.5" x="353.5">isa --&gt; NSConcreteStackBlock</text></g></g><g id="minder_node16"><g id="node_expander13" display="none" style="cursor: pointer;"><path id="kity_path_382" fill="white" stroke="gray" d="M343.5,1027.5A6,6,0,1,1,331.5,1027.5A6,6,0,1,1,343.5,1027.5"></path><path id="kity_path_383" fill="none" stroke="gray"></path></g><path id="node_outline14" fill="none" stroke="none" d="M348.5,1016.5h498a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-498a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text14" fill="black"><text id="kity_text_179" text-rendering="inherit" font-size="12" dy=".8em" y="1021.5" x="353.5">其捕获的变量会赋值到结构体的成员上，所以当block初始化完成后，捕获到的变更不能更改</text></g></g><g id="minder_node17"><g id="node_expander14" display="none" style="cursor: pointer;"><path id="kity_path_385" fill="white" stroke="gray" d="M343.5,1079.5A6,6,0,1,1,331.5,1079.5A6,6,0,1,1,343.5,1079.5"></path><path id="kity_path_386" fill="none" stroke="gray"></path></g><path id="node_outline15" fill="none" stroke="none" d="M348.5,1068.5h354a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-354a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text15" fill="black"><text id="kity_text_181" text-rendering="inherit" font-size="12" dy=".8em" y="1073.5" x="353.5">函数返回时，函数的栈帧被销毁，这个block的内存也会被清除。</text></g></g><g id="minder_node18"><g id="node_expander20" style="cursor: pointer;"><path id="kity_path_403" fill="white" stroke="gray" d="M343.5,1209.5A6,6,0,1,1,331.5,1209.5A6,6,0,1,1,343.5,1209.5"></path><path id="kity_path_404" fill="none" stroke="gray" d="M333,1209.5L342,1209.5"></path></g><path id="node_outline21" fill="none" stroke="none" d="M348.5,1198.5h422a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-422a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text21" fill="black"><text id="kity_text_193" text-rendering="inherit" font-size="12" dy=".8em" y="1203.5" x="353.5">函数结束后扔需使用这个block，就必须用Block_copy()方法将它拷贝到堆上.</text></g></g><g id="minder_node19"><g id="node_expander19" style="cursor: pointer;"><path id="kity_path_400" fill="white" stroke="gray" d="M815.5,1209.5A6,6,0,1,1,803.5,1209.5A6,6,0,1,1,815.5,1209.5"></path><path id="kity_path_401" fill="none" stroke="gray" d="M805,1209.5L814,1209.5"></path></g><path id="node_outline20" fill="none" stroke="none" d="M820.5,1198.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text20" fill="black"><text id="kity_text_191" text-rendering="inherit" font-size="12" dy=".8em" y="1203.5" x="825.5">具体实现</text></g></g><g id="minder_node20"><g id="node_expander15" display="none" style="cursor: pointer;"><path id="kity_path_388" fill="white" stroke="gray" d="M923.5,1131.5A6,6,0,1,1,911.5,1131.5A6,6,0,1,1,923.5,1131.5"></path><path id="kity_path_389" fill="none" stroke="gray"></path></g><path id="node_outline16" fill="none" stroke="none" d="M928.5,1120.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text16" fill="black"><text id="kity_text_183" text-rendering="inherit" font-size="12" dy=".8em" y="1125.5" x="933.5">申请内存</text></g></g><g id="minder_node21"><g id="node_expander16" display="none" style="cursor: pointer;"><path id="kity_path_391" fill="white" stroke="gray" d="M923.5,1183.5A6,6,0,1,1,911.5,1183.5A6,6,0,1,1,923.5,1183.5"></path><path id="kity_path_392" fill="none" stroke="gray"></path></g><path id="node_outline17" fill="none" stroke="none" d="M928.5,1172.5h106a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-106a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text17" fill="black"><text id="kity_text_185" text-rendering="inherit" font-size="12" dy=".8em" y="1177.5" x="933.5">将栈数据复制过去</text></g></g><g id="minder_node22"><g id="node_expander17" display="none" style="cursor: pointer;"><path id="kity_path_394" fill="white" stroke="gray" d="M923.5,1235.5A6,6,0,1,1,911.5,1235.5A6,6,0,1,1,923.5,1235.5"></path><path id="kity_path_395" fill="none" stroke="gray"></path></g><path id="node_outline18" fill="none" stroke="none" d="M928.5,1224.5h188a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-188a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text18" fill="black"><text id="kity_text_187" text-rendering="inherit" font-size="12" dy=".8em" y="1229.5" x="933.5">isa--&gt;NSConcreteMallockBlock</text></g></g><g id="minder_node23"><g id="node_expander18" display="none" style="cursor: pointer;"><path id="kity_path_397" fill="white" stroke="gray" d="M923.5,1287.5A6,6,0,1,1,911.5,1287.5A6,6,0,1,1,923.5,1287.5"></path><path id="kity_path_398" fill="none" stroke="gray"></path></g><path id="node_outline19" fill="none" stroke="none" d="M928.5,1276.5h280a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-280a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text19" fill="black"><text id="kity_text_189" text-rendering="inherit" font-size="12" dy=".8em" y="1281.5" x="933.5">向捕获到的对象发送retain，增加block的引用计数</text></g></g><g id="minder_node24"><g id="node_expander31" style="cursor: pointer;"><path id="kity_path_436" fill="white" stroke="gray" d="M229.5,1430.5A6,6,0,1,1,217.5,1430.5A6,6,0,1,1,229.5,1430.5"></path><path id="kity_path_437" fill="none" stroke="gray" d="M219,1430.5L228,1430.5"></path></g><path id="node_outline32" fill="none" stroke="none" d="M234.5,1419.5h114a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-114a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text32" fill="black"><text id="kity_text_215" text-rendering="inherit" font-size="12" dy=".8em" y="1424.5" x="239.5">__block类型的变量</text></g></g><g id="minder_node25"><g id="node_expander24" style="cursor: pointer;"><path id="kity_path_415" fill="white" stroke="gray" d="M393.5,1365.5A6,6,0,1,1,381.5,1365.5A6,6,0,1,1,393.5,1365.5"></path><path id="kity_path_416" fill="none" stroke="gray" d="M383,1365.5L392,1365.5"></path></g><path id="node_outline25" fill="none" stroke="none" d="M398.5,1354.5h174a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-174a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text25" fill="black"><text id="kity_text_201" text-rendering="inherit" font-size="12" dy=".8em" y="1359.5" x="403.5">为什么需要用__block修饰变量</text></g></g><g id="minder_node26"><g id="node_expander22" display="none" style="cursor: pointer;"><path id="kity_path_409" fill="white" stroke="gray" d="M617.5,1339.5A6,6,0,1,1,605.5,1339.5A6,6,0,1,1,617.5,1339.5"></path><path id="kity_path_410" fill="none" stroke="gray"></path></g><path id="node_outline23" fill="none" stroke="none" d="M622.5,1328.5h418a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-418a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text23" fill="black"><text id="kity_text_197" text-rendering="inherit" font-size="12" dy=".8em" y="1333.5" x="627.5">默认block捕获到的变量，都是赋值给block的结构体的，相当于const不可改 </text></g></g><g id="minder_node27"><g id="node_expander23" display="none" style="cursor: pointer;"><path id="kity_path_412" fill="white" stroke="gray" d="M617.5,1391.5A6,6,0,1,1,605.5,1391.5A6,6,0,1,1,617.5,1391.5"></path><path id="kity_path_413" fill="none" stroke="gray"></path></g><path id="node_outline24" fill="none" stroke="none" d="M622.5,1380.5h350a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-350a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text24" fill="black"><text id="kity_text_199" text-rendering="inherit" font-size="12" dy=".8em" y="1385.5" x="627.5">为了让block能访问并修改外部变量，需要加上__block修饰词。</text></g></g><g id="minder_node28"><g id="node_expander30" style="cursor: pointer;"><path id="kity_path_433" fill="white" stroke="gray" d="M393.5,1495.5A6,6,0,1,1,381.5,1495.5A6,6,0,1,1,393.5,1495.5"></path><path id="kity_path_434" fill="none" stroke="gray" d="M383,1495.5L392,1495.5"></path></g><path id="node_outline31" fill="none" stroke="none" d="M398.5,1484.5h174a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-174a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text31" fill="black"><text id="kity_text_213" text-rendering="inherit" font-size="12" dy=".8em" y="1489.5" x="403.5">__block修饰的变量产生的影响</text></g></g><g id="minder_node29"><g id="node_expander29" style="cursor: pointer;"><path id="kity_path_430" fill="white" stroke="gray" d="M617.5,1495.5A6,6,0,1,1,605.5,1495.5A6,6,0,1,1,617.5,1495.5"></path><path id="kity_path_431" fill="none" stroke="gray" d="M607,1495.5L616,1495.5"></path></g><path id="node_outline30" fill="none" stroke="none" d="M622.5,1484.5h316a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-316a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text30" fill="black"><text id="kity_text_211" text-rendering="inherit" font-size="12" dy=".8em" y="1489.5" x="627.5">变量变成一个struct(struct __Block_byref)，首地址为*isa</text></g></g><g id="minder_node30"><g id="node_expander28" style="cursor: pointer;"><path id="kity_path_427" fill="white" stroke="gray" d="M983.5,1495.5A6,6,0,1,1,971.5,1495.5A6,6,0,1,1,983.5,1495.5"></path><path id="kity_path_428" fill="none" stroke="gray" d="M973,1495.5L982,1495.5"></path></g><path id="node_outline29" fill="none" stroke="none" d="M988.5,1484.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text29" fill="black"><text id="kity_text_209" text-rendering="inherit" font-size="12" dy=".8em" y="1489.5" x="993.5">产生的作用</text></g></g><g id="minder_node31"><g id="node_expander25" display="none" style="cursor: pointer;"><path id="kity_path_418" fill="white" stroke="gray" d="M1103.5,1443.5A6,6,0,1,1,1091.5,1443.5A6,6,0,1,1,1103.5,1443.5"></path><path id="kity_path_419" fill="none" stroke="gray"></path></g><path id="node_outline26" fill="none" stroke="none" d="M1108.5,1432.5h78a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-78a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text26" fill="black"><text id="kity_text_203" text-rendering="inherit" font-size="12" dy=".8em" y="1437.5" x="1113.5">被block共享</text></g></g><g id="minder_node32"><g id="node_expander26" display="none" style="cursor: pointer;"><path id="kity_path_421" fill="white" stroke="gray" d="M1103.5,1495.5A6,6,0,1,1,1091.5,1495.5A6,6,0,1,1,1103.5,1495.5"></path><path id="kity_path_422" fill="none" stroke="gray"></path></g><path id="node_outline27" fill="none" stroke="none" d="M1108.5,1484.5h142a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-142a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text27" fill="black"><text id="kity_text_205" text-rendering="inherit" font-size="12" dy=".8em" y="1489.5" x="1113.5">不受栈帧生命周期的限制</text></g></g><g id="minder_node33"><g id="node_expander27" display="none" style="cursor: pointer;"><path id="kity_path_424" fill="white" stroke="gray" d="M1103.5,1547.5A6,6,0,1,1,1091.5,1547.5A6,6,0,1,1,1103.5,1547.5"></path><path id="kity_path_425" fill="none" stroke="gray"></path></g><path id="node_outline28" fill="none" stroke="none" d="M1108.5,1536.5h138a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-138a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text28" fill="black"><text id="kity_text_207" text-rendering="inherit" font-size="12" dy=".8em" y="1541.5" x="1113.5">能随着block复制到堆上</text></g></g><g id="minder_node34"><g id="node_expander46" style="cursor: pointer;"><path id="kity_path_481" fill="white" stroke="gray" d="M229.5,1677.5A6,6,0,1,1,217.5,1677.5A6,6,0,1,1,229.5,1677.5"></path><path id="kity_path_482" fill="none" stroke="gray" d="M219,1677.5L228,1677.5"></path></g><path id="node_outline47" fill="none" stroke="none" d="M234.5,1666.5h36a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-36a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text47" fill="black"><text id="kity_text_246" text-rendering="inherit" font-size="12" dy=".8em" y="1671.5" x="239.5">ARC</text></g></g><g id="minder_node35"><g id="node_expander45" style="cursor: pointer;"><path id="kity_path_478" fill="white" stroke="gray" d="M315.5,1677.5A6,6,0,1,1,303.5,1677.5A6,6,0,1,1,315.5,1677.5"></path><path id="kity_path_479" fill="none" stroke="gray" d="M305,1677.5L314,1677.5"></path></g><path id="node_outline46" fill="none" stroke="none" d="M320.5,1666.5h194a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-194a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text46" fill="black"><text id="kity_text_244" text-rendering="inherit" font-size="12" dy=".8em" y="1671.5" x="325.5">__block id x;默认的行为会强引用x</text></g></g><g id="minder_node36"><g id="node_expander44" style="cursor: pointer;"><path id="kity_path_475" fill="white" stroke="gray" d="M559.5,1677.5A6,6,0,1,1,547.5,1677.5A6,6,0,1,1,559.5,1677.5"></path><path id="kity_path_476" fill="none" stroke="gray" d="M549,1677.5L558,1677.5"></path></g><path id="node_outline45" fill="none" stroke="none" d="M564.5,1666.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text45" fill="black"><text id="kity_text_242" text-rendering="inherit" font-size="12" dy=".8em" y="1671.5" x="569.5">如何解决强引用</text></g></g><g id="minder_node37"><g id="node_expander39" style="cursor: pointer;"><path id="kity_path_460" fill="white" stroke="gray" d="M703.5,1625.5A6,6,0,1,1,691.5,1625.5A6,6,0,1,1,703.5,1625.5"></path><path id="kity_path_461" fill="none" stroke="gray" d="M693,1625.5L702,1625.5"></path></g><path id="node_outline40" fill="none" stroke="none" d="M708.5,1614.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text40" fill="black"><text id="kity_text_232" text-rendering="inherit" font-size="12" dy=".8em" y="1619.5" x="713.5">推荐方式</text></g></g><g id="minder_node38"><g id="node_expander38" style="cursor: pointer;"><path id="kity_path_457" fill="white" stroke="gray" d="M811.5,1625.5A6,6,0,1,1,799.5,1625.5A6,6,0,1,1,811.5,1625.5"></path><path id="kity_path_458" fill="none" stroke="gray" d="M801,1625.5L810,1625.5"></path></g><path id="node_outline39" fill="none" stroke="none" d="M816.5,1614.5h78a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-78a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text39" fill="black"><text id="kity_text_230" text-rendering="inherit" font-size="12" dy=".8em" y="1619.5" x="821.5">使用__weak</text></g></g><g id="minder_node39"><g id="node_expander37" style="cursor: pointer;"><path id="kity_path_454" fill="white" stroke="gray" d="M939.5,1625.5A6,6,0,1,1,927.5,1625.5A6,6,0,1,1,939.5,1625.5"></path><path id="kity_path_455" fill="none" stroke="gray" d="M929,1625.5L938,1625.5"></path></g><path id="node_outline38" fill="none" stroke="none" d="M944.5,1614.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text38" fill="black"><text id="kity_text_228" text-rendering="inherit" font-size="12" dy=".8em" y="1619.5" x="949.5">注意</text></g></g><g id="minder_node40"><g id="node_expander36" style="cursor: pointer;"><path id="kity_path_451" fill="white" stroke="gray" d="M1023.5,1625.5A6,6,0,1,1,1011.5,1625.5A6,6,0,1,1,1023.5,1625.5"></path><path id="kity_path_452" fill="none" stroke="gray" d="M1013,1625.5L1022,1625.5"></path></g><path id="node_outline37" fill="none" stroke="none" d="M1028.5,1605.5h253a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-253a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text37" fill="black"><text id="kity_text_225" text-rendering="inherit" font-size="12" dy=".8em" y="1610.5" x="1033.5">block内部在强引用一次</text><text id="kity_text_226" text-rendering="inherit" font-size="12" dy=".8em" y="1628.5" x="1033.5"> __strong MyObject *strongObj = weakObj;</text></g></g><g id="minder_node41"><g id="node_expander35" style="cursor: pointer;"><path id="kity_path_448" fill="white" stroke="gray" d="M1326.5,1625.5A6,6,0,1,1,1314.5,1625.5A6,6,0,1,1,1326.5,1625.5"></path><path id="kity_path_449" fill="none" stroke="gray" d="M1316,1625.5L1325,1625.5"></path></g><path id="node_outline36" fill="none" stroke="none" d="M1331.5,1614.5h238a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-238a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text36" fill="black"><text id="kity_text_223" text-rendering="inherit" font-size="12" dy=".8em" y="1619.5" x="1336.5">外部obj释放，block内部obj 同样会变成nil</text></g></g><g id="minder_node42"><g id="node_expander34" style="cursor: pointer;"><path id="kity_path_445" fill="white" stroke="gray" d="M1614.5,1625.5A6,6,0,1,1,1602.5,1625.5A6,6,0,1,1,1614.5,1625.5"></path><path id="kity_path_446" fill="none" stroke="gray" d="M1604,1625.5L1613,1625.5"></path></g><path id="node_outline35" fill="none" stroke="none" d="M1619.5,1614.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text35" fill="black"><text id="kity_text_221" text-rendering="inherit" font-size="12" dy=".8em" y="1619.5" x="1624.5">那加strong意义</text></g></g><g id="minder_node43"><g id="node_expander32" display="none" style="cursor: pointer;"><path id="kity_path_439" fill="white" stroke="gray" d="M1758.5,1599.5A6,6,0,1,1,1746.5,1599.5A6,6,0,1,1,1758.5,1599.5"></path><path id="kity_path_440" fill="none" stroke="gray"></path></g><path id="node_outline33" fill="none" stroke="none" d="M1763.5,1588.5h240a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-240a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text33" fill="black"><text id="kity_text_217" text-rendering="inherit" font-size="12" dy=".8em" y="1593.5" x="1768.5">只要 block 部分执行了（非常重要的前提）</text></g></g><g id="minder_node44"><g id="node_expander33" display="none" style="cursor: pointer;"><path id="kity_path_442" fill="white" stroke="gray" d="M1758.5,1651.5A6,6,0,1,1,1746.5,1651.5A6,6,0,1,1,1758.5,1651.5"></path><path id="kity_path_443" fill="none" stroke="gray"></path></g><path id="node_outline34" fill="none" stroke="none" d="M1763.5,1640.5h319a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-319a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text34" fill="black"><text id="kity_text_219" text-rendering="inherit" font-size="12" dy=".8em" y="1645.5" x="1768.5">即使我们中途释放了 obj，block 内部依然会继续强引用它</text></g></g><g id="minder_node45"><g id="node_expander43" style="cursor: pointer;"><path id="kity_path_472" fill="white" stroke="gray" d="M703.5,1729.5A6,6,0,1,1,691.5,1729.5A6,6,0,1,1,703.5,1729.5"></path><path id="kity_path_473" fill="none" stroke="gray" d="M693,1729.5L702,1729.5"></path></g><path id="node_outline44" fill="none" stroke="none" d="M708.5,1718.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text44" fill="black"><text id="kity_text_240" text-rendering="inherit" font-size="12" dy=".8em" y="1723.5" x="713.5">不推荐方式</text></g></g><g id="minder_node46"><g id="node_expander41" style="cursor: pointer;"><path id="kity_path_466" fill="white" stroke="gray" d="M823.5,1703.5A6,6,0,1,1,811.5,1703.5A6,6,0,1,1,823.5,1703.5"></path><path id="kity_path_467" fill="none" stroke="gray" d="M813,1703.5L822,1703.5"></path></g><path id="node_outline42" fill="none" stroke="none" d="M828.5,1692.5h204a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-204a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text42" fill="black"><text id="kity_text_236" text-rendering="inherit" font-size="12" dy=".8em" y="1697.5" x="833.5">__unsafe_unretained __block id x;</text></g></g><g id="minder_node47"><g id="node_expander40" display="none" style="cursor: pointer;"><path id="kity_path_463" fill="white" stroke="gray" d="M1077.5,1703.5A6,6,0,1,1,1065.5,1703.5A6,6,0,1,1,1077.5,1703.5"></path><path id="kity_path_464" fill="none" stroke="gray"></path></g><path id="node_outline41" fill="none" stroke="none" d="M1082.5,1692.5h106a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-106a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text41" fill="black"><text id="kity_text_234" text-rendering="inherit" font-size="12" dy=".8em" y="1697.5" x="1087.5">有可能导致野指针</text></g></g><g id="minder_node48"><g id="node_expander42" display="none" style="cursor: pointer;"><path id="kity_path_469" fill="white" stroke="gray" d="M823.5,1755.5A6,6,0,1,1,811.5,1755.5A6,6,0,1,1,823.5,1755.5"></path><path id="kity_path_470" fill="none" stroke="gray"></path></g><path id="node_outline43" fill="none" stroke="none" d="M828.5,1744.5h98a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-98a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text43" fill="black"><text id="kity_text_238" text-rendering="inherit" font-size="12" dy=".8em" y="1749.5" x="833.5">设置__block=nil</text></g></g><g id="minder_node49"><g id="node_expander48" style="cursor: pointer;"><path id="kity_path_487" fill="white" stroke="gray" d="M229.5,1807.5A6,6,0,1,1,217.5,1807.5A6,6,0,1,1,229.5,1807.5"></path><path id="kity_path_488" fill="none" stroke="gray" d="M219,1807.5L228,1807.5"></path></g><path id="node_outline49" fill="none" stroke="none" d="M234.5,1796.5h38a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-38a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text49" fill="black"><text id="kity_text_250" text-rendering="inherit" font-size="12" dy=".8em" y="1801.5" x="239.5">MRC</text></g></g><g id="minder_node50"><g id="node_expander47" display="none" style="cursor: pointer;"><path id="kity_path_484" fill="white" stroke="gray" d="M317.5,1807.5A6,6,0,1,1,305.5,1807.5A6,6,0,1,1,317.5,1807.5"></path><path id="kity_path_485" fill="none" stroke="gray"></path></g><path id="node_outline48" fill="none" stroke="none" d="M322.5,1796.5h214a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-214a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text48" fill="black"><text id="kity_text_248" text-rendering="inherit" font-size="12" dy=".8em" y="1801.5" x="327.5">__block id x;可以让block不强引用x。</text></g></g><g id="minder_node51"><g id="node_expander57" style="cursor: pointer;"><path id="kity_path_514" fill="white" stroke="gray" d="M244.5,603.5A6,6,0,1,1,232.5,603.5A6,6,0,1,1,244.5,603.5"></path><path id="kity_path_515" fill="none" stroke="gray" d="M234,603.5L243,603.5"></path></g><path id="node_outline58" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M248.5,590.5h62a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-62a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text58" fill="black"><text id="kity_text_268" text-rendering="inherit" font-size="14" dy=".8em" y="596.5" x="265.5">类型</text></g></g><g id="minder_node52"><g id="node_expander56" style="cursor: pointer;"><path id="kity_path_511" fill="white" stroke="gray" d="M343.5,604.5A6,6,0,1,1,331.5,604.5A6,6,0,1,1,343.5,604.5"></path><path id="kity_path_512" fill="none" stroke="gray" d="M333,604.5L342,604.5"></path></g><path id="node_outline57" fill="none" stroke="none" d="M348.5,593.5h345a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-345a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text57" fill="black"><text id="kity_text_266" text-rendering="inherit" font-size="12" dy=".8em" y="598.5" x="353.5">有几种block能接触到的主要是前3种，后三种用于GC不再讨论</text></g></g><g id="minder_node53"><g id="node_expander50" display="none" style="cursor: pointer;"><path id="kity_path_493" fill="white" stroke="gray" d="M738.5,474.5A6,6,0,1,1,726.5,474.5A6,6,0,1,1,738.5,474.5"></path><path id="kity_path_494" fill="none" stroke="gray"></path></g><path id="node_outline51" fill="none" stroke="none" d="M743.5,463.5h400a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-400a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text51" fill="black"><text id="kity_text_254" text-rendering="inherit" font-size="12" dy=".8em" y="468.5" x="748.5">_NSConcreteGlobalBlock 全局的静态 block，不会访问任何外部变量。</text></g></g><g id="minder_node54"><g id="node_expander51" display="none" style="cursor: pointer;"><path id="kity_path_496" fill="white" stroke="gray" d="M738.5,526.5A6,6,0,1,1,726.5,526.5A6,6,0,1,1,738.5,526.5"></path><path id="kity_path_497" fill="none" stroke="gray"></path></g><path id="node_outline52" fill="none" stroke="none" d="M743.5,515.5h404a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-404a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text52" fill="black"><text id="kity_text_256" text-rendering="inherit" font-size="12" dy=".8em" y="520.5" x="748.5">_NSConcreteStackBlock 保存在栈中的 block，当函数返回时会被销毁。</text></g></g><g id="minder_node55"><g id="node_expander52" display="none" style="cursor: pointer;"><path id="kity_path_499" fill="white" stroke="gray" d="M738.5,578.5A6,6,0,1,1,726.5,578.5A6,6,0,1,1,738.5,578.5"></path><path id="kity_path_500" fill="none" stroke="gray"></path></g><path id="node_outline53" fill="none" stroke="none" d="M743.5,567.5h436a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-436a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text53" fill="black"><text id="kity_text_258" text-rendering="inherit" font-size="12" dy=".8em" y="572.5" x="748.5">_NSConcreteMallocBlock 保存在堆中的 block，当引用计数为 0 时会被销毁。</text></g></g><g id="minder_node56"><g id="node_expander53" display="none" style="cursor: pointer;"><path id="kity_path_502" fill="white" stroke="gray" d="M738.5,630.5A6,6,0,1,1,726.5,630.5A6,6,0,1,1,738.5,630.5"></path><path id="kity_path_503" fill="none" stroke="gray"></path></g><path id="node_outline54" fill="none" stroke="none" d="M743.5,619.5h201a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-201a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text54" fill="black"><text id="kity_text_260" text-rendering="inherit" font-size="12" dy=".8em" y="624.5" x="748.5">_NSConcreteWeakBlockVariable</text></g></g><g id="minder_node57"><g id="node_expander54" display="none" style="cursor: pointer;"><path id="kity_path_505" fill="white" stroke="gray" d="M738.5,682.5A6,6,0,1,1,726.5,682.5A6,6,0,1,1,738.5,682.5"></path><path id="kity_path_506" fill="none" stroke="gray"></path></g><path id="node_outline55" fill="none" stroke="none" d="M743.5,671.5h146a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-146a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text55" fill="black"><text id="kity_text_262" text-rendering="inherit" font-size="12" dy=".8em" y="676.5" x="748.5">_NSConcreteAutoBlock</text></g></g><g id="minder_node58"><g id="node_expander55" display="none" style="cursor: pointer;"><path id="kity_path_508" fill="white" stroke="gray" d="M738.5,734.5A6,6,0,1,1,726.5,734.5A6,6,0,1,1,738.5,734.5"></path><path id="kity_path_509" fill="none" stroke="gray"></path></g><path id="node_outline56" fill="none" stroke="none" d="M743.5,723.5h169a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-169a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text56" fill="black"><text id="kity_text_264" text-rendering="inherit" font-size="12" dy=".8em" y="728.5" x="748.5">_NSConcreteFinalizingBlock</text></g></g><g id="minder_node59"><g id="node_expander62" style="cursor: pointer;"><path id="kity_path_529" fill="white" stroke="gray" d="M203.5,2117.5A6,6,0,1,1,191.5,2117.5A6,6,0,1,1,203.5,2117.5"></path><path id="kity_path_530" fill="none" stroke="gray" d="M193,2117.5L202,2117.5"></path></g><path id="node_outline63" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M207.5,2104.5h184a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-184a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text63" fill="black"><text id="kity_text_282" text-rendering="inherit" font-size="14" dy=".8em" y="2110.5" x="224.5">block对变量的捕获规则</text></g></g><g id="minder_node60"><g id="node_expander58" display="none" style="cursor: pointer;"><path id="kity_path_517" fill="white" stroke="gray" d="M434.5,2003.5A6,6,0,1,1,422.5,2003.5A6,6,0,1,1,434.5,2003.5"></path><path id="kity_path_518" fill="none" stroke="gray"></path></g><path id="node_outline59" fill="none" stroke="none" d="M439.5,1992.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text59" fill="black"><text id="kity_text_270" text-rendering="inherit" font-size="12" dy=".8em" y="1997.5" x="444.5">静态存储区的变量，可以修改</text></g></g><g id="minder_node61"><g id="node_expander59" display="none" style="cursor: pointer;"><path id="kity_path_520" fill="white" stroke="gray" d="M434.5,2055.5A6,6,0,1,1,422.5,2055.5A6,6,0,1,1,434.5,2055.5"></path><path id="kity_path_521" fill="none" stroke="gray"></path></g><path id="node_outline60" fill="none" stroke="none" d="M439.5,2044.5h306a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-306a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text60" fill="black"><text id="kity_text_272" text-rendering="inherit" font-size="12" dy=".8em" y="2049.5" x="444.5">block接受的参数传值，可修改，和一般函数的参数相同 </text></g></g><g id="minder_node62"><g id="node_expander60" display="none" style="cursor: pointer;"><path id="kity_path_523" fill="white" stroke="gray" d="M434.5,2125.5A6,6,0,1,1,422.5,2125.5A6,6,0,1,1,434.5,2125.5"></path><path id="kity_path_524" fill="none" stroke="gray"></path></g><path id="node_outline61" fill="none" stroke="none" d="M439.5,2096.5h429a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-429a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text61" fill="black"><text id="kity_text_274" text-rendering="inherit" font-size="12" dy=".8em" y="2101.5" x="444.5">栈变量 (被捕获的上下文变量)</text><text id="kity_text_275" text-rendering="inherit" font-size="12" dy=".8em" y="2119.5" x="444.5">const，不可修改。 当block被copy后，block会对 id类型的变量产生强引用。</text><text id="kity_text_276" text-rendering="inherit" font-size="12" dy=".8em" y="2137.5" x="444.5">每次执行block时,捕获到的变量都是最初的值。</text></g></g><g id="minder_node63"><g id="node_expander61" display="none" style="cursor: pointer;"><path id="kity_path_526" fill="white" stroke="gray" d="M434.5,2213.5A6,6,0,1,1,422.5,2213.5A6,6,0,1,1,434.5,2213.5"></path><path id="kity_path_527" fill="none" stroke="gray"></path></g><path id="node_outline62" fill="none" stroke="none" d="M439.5,2184.5h441a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-441a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text62" fill="black"><text id="kity_text_278" text-rendering="inherit" font-size="12" dy=".8em" y="2189.5" x="444.5">栈变量 (有__block前缀)</text><text id="kity_text_279" text-rendering="inherit" font-size="12" dy=".8em" y="2207.5" x="444.5">引用，可以修改。如果时id类型则不会被block retain,必须手动处理其内存管理。</text><text id="kity_text_280" text-rendering="inherit" font-size="12" dy=".8em" y="2225.5" x="444.5">如果该类型是C类型变量，block被copy到heap后,该值也会被挪动到heap</text></g></g></g></g></svg>